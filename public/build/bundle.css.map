{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../index.svelte",
    "../../SvelteTooltip.svelte",
    "../../App.svelte",
    "../../About.svelte",
    "../../Home.svelte",
    "../../Topic.svelte",
    "../../SGMap.svelte",
    "../../TextView.svelte",
    "../../Textdemo.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let size = 25;\n  export let speed = 750;\n  export let color = 'rgba(0,0,0,0.4)';\n  export let thickness = 2;\n  export let gap = 40;\n  export let radius = 10;\n\n  let dash;\n  $: dash = 2 * Math.PI * radius * (100 - gap) / 100\n</script>\n\n<svg\n  height=\"{size}\"\n  width=\"{size}\"\n  style=\"animation-duration:{speed}ms;\"\n  class=\"svelte-spinner\"\n  viewbox=\"0 0 32 32\"\n>\n  <circle\n    role=\"presentation\"\n    cx=\"16\"\n    cy=\"16\"\n    r=\"{radius}\"\n    stroke=\"{color}\"\n    fill=\"none\"\n    stroke-width=\"{thickness}\"\n    stroke-dasharray=\"{dash},100\"\n    stroke-linecap=\"round\"\n  />\n</svg>\n\n<style>\n  .svelte-spinner {\n    transition-property: transform;\n    animation-name: svelte-spinner_infinite-spin;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n  }\n  @keyframes svelte-spinner_infinite-spin {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n  }\n</style>\n",
    "<script>\n  export let tip = '';\n  export let top = false;\n  export let right = false;\n  export let bottom = false;\n  export let left = false;\n  export let active = false;\n  export let color = '#757575';\n\n  let style = `background-color: ${color};`\n\n</script>\n\n<style>\n.tooltip-wrapper {\n  position: relative;\n  display: inline-block;\n}\n\n.tooltip {\n  position: absolute;\n  font-family: inherit;\n  white-space: nowrap;\n  color: inherit;\n  padding: 8px 16px;\n  border-radius: 6px;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 150ms, visibility 150ms;\n}\n\n.tooltip.top {\n  left: 50%;\n  transform: translate(-50%, -100%);\n  margin-top: -8px;\n}\n\n.tooltip.bottom {\n  left: 50%;\n  bottom: 0;\n  transform: translate(-50%, 100%);\n  margin-bottom: -8px;\n}\n\n.tooltip.left {\n  left: 0;\n  transform: translateX(-100%);\n  margin-left: -8px;\n}\n\n.tooltip.right {\n  right: 0;\n  transform: translateX(100%);\n  margin-right: -8px;\n}\n\n.tooltip.active {\n  opacity: 1;\n  visibility: initial;\n}\n\n.tooltip-slot:hover + .tooltip {\n  opacity: 1;\n  visibility: initial;\n}\n\n</style>\n\n<div class=\"tooltip-wrapper\">\n  <span class=\"tooltip-slot\">\n    <slot/>\n  </span>\n  <span\n    class=\"tooltip\" \n    class:active\n    class:left\n    class:right\n    class:bottom\n    class:top\n    style={style}\n  >\n    {tip}\n  </span>\n</div>",
    "<script>\n  import Home from \"./page/Home.svelte\";\n  import About from \"./page/About.svelte\";\n  import Topic from \"./page/Topic.svelte\";\n  export let nav = \"home\";\n\n  let class1, class2, class3;\n\n  $: {\n    if (nav) {\n      if (nav === \"home\") {\n        class1 = \"topnav-active\";\n      } else {\n        class1 = \"\";\n      }\n      if (nav === \"topic\") {\n        class2 = \"topnav-active\";\n      } else {\n        class2 = \"\";\n      }\n      if (nav === \"about\") {\n        class3 = \"topnav-active\";\n      } else {\n        class3 = \"\";\n      }\n    }\n  }\n</script>\n\n<main>\n  <ul class=\"topnav\">\n    <a href=\"/\" on:click|preventDefault={() => (nav = 'home')} class={class1}>\n      Home\n    </a>\n    <a href=\"/\" on:click|preventDefault={() => (nav = 'topic')} class={class2}>\n      Topic\n    </a>\n    <a href=\"/\" on:click|preventDefault={() => (nav = 'about')} class={class3}>\n      About\n    </a>\n  </ul>\n\n  <div>\n    {#if nav === 'home'}\n      <Home />\n    {:else if nav === 'topic'}\n      <Topic />\n    {:else if nav === 'about'}\n      <About />\n    {/if}\n  </div>\n\n</main>\n\n<style>\n  .topnav {\n    background-color: #53aeb6;\n    overflow: hidden;\n    margin-bottom: 0;\n    border: 0;\n  }\n  \n  /* Style the links inside the navigation bar */\n  .topnav a {\n    float: left;\n    color: #f2f2f2;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n    font-family: 'Hind Siliguri', sans-serif;\n    font-size: 17px;\n  }\n\n  /* Change the color of links on hover */\n  .topnav a:hover {\n    color: rgb(124, 124, 124);\n  }\n\n  /* Add a color to the active/current link */\n  .topnav-active {\n    background-color: #9bd0d5;\n    color: white;\n  }\n</style>\n",
    "<script>\n\n</script>\n\n<h1>About</h1>\n\n<style>\nh1 {\n  font-family: 'Acme', sans-serif;\n}\n</style>\n",
    "<script>\n  import SGMap from \"./component/SGMap.svelte\";\n  import Beeswarm from \"./component/Beeswarm.svelte\";\n  import TextView from \"./component/TextView.svelte\";\n</script>\n\n<div class=\"container\">\n  <div class=\"grid-2\">\n    <div class=\"\">\n      <SGMap />\n    </div>\n\n    <div class=\"\">\n      <Beeswarm />\n    </div>\n  </div>\n\n  <div>\n    <TextView />\n  </div>\n\n</div>\n\n<style>\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  .grid-2 {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 2rem;\n    margin: 1em 10% 1em;\n  }\n</style>\n",
    "<script>\n  import SGTopic from \"./component/SGTopic.svelte\";\n</script>\n\n<h1>Topic</h1>\n<div class=\"grid-2\">\n  <SGTopic />\n</div>\n\n<style>\n  h1 {\n    font-family: \"Acme\", sans-serif;\n  }\n\n  .grid-2 {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 2rem;\n    margin: 1em 10% 1em;\n  }\n</style>\n",
    "<script>\n  \"use strict\";\n  import BaseMap from \"./BaseMap.svelte\";\n  import WordMap from \"./WordMap.svelte\";\n  import { Graphic, createGeoScales } from \"@snlab/florence\";\n  import DataContainer from \"@snlab/florence-datacontainer\";\n  import { HEX } from \"./hex\";\n  import { hoverWordWrite, clickWordWrite, clickHexIdWrite } from \"./store.js\";\n\n  // subscrite data\n  let hoverWord = null;\n  let selectHexId = null;\n  let clickWord = null;\n  hoverWordWrite.subscribe(value => (hoverWord = value));\n  clickWordWrite.subscribe(value => (clickWord = value));\n  clickHexIdWrite.subscribe(value => (selectHexId = value));\n  $: console.log(\"hoverWord:\", hoverWord, \"\\n selectHexId\", selectHexId, \"\\n clickWord\", clickWord);\n\n  ////// data\n  const hex = new DataContainer(HEX);\n  ////// basemap set up\n  const geoScale = createGeoScales(hex.domain(\"$geometry\"));\n  const width = 700;\n  const height = 500;\n</script>\n\n<!-- base map -->\n<div class=\"basemap\">\n  <Graphic {width} {height} {...geoScale} padding={20} flipY>\n    <BaseMap {hex} />\n    {#if hoverWord !== 0}\n      <WordMap {hex} />\n    {/if}\n    {#if clickWord !== 0}\n      <WordMap {hex} />\n    {/if}\n\n  </Graphic>\n</div>\n<button class=\"badge\"\n  on:click={() => {\n    clickWord = 0;\n  }}>\n  Reset Map\n</button>\n\n<style>\n  .badge {\n    font-size: 0.8rem;\n    padding: 0.2rem 0.7rem;\n    text-align: center;\n    margin: 0.3rem;\n    background: var(--light-color);\n    color: #333;\n    border-radius: 5px;\n  }\n  .badge:hover {\n    background: #53aeb6;\n    color: white;\n  }\n</style>\n",
    "<script>\n  \"use strict\";\n  import DataContainer from \"@snlab/florence-datacontainer\";\n  import { clickHexIdWrite, clickWordWrite } from \"./store.js\";\n  import SvelteTooltip from \"svelte-tooltip\";\n  import Textdemo from \"./Textdemo.svelte\";\n  import { db } from \"./firebase.js\";\n  import Spinner from \"svelte-spinner\";\n\n  let selectedHexId = null;\n  clickHexIdWrite.subscribe(value => (selectedHexId = value));\n  let clickWord = null;\n  clickWordWrite.subscribe(value => (clickWord = value));\n\n  // filter data by selectedHex Id\n  let articles = [];\n  const requestFirebase = async hexToCheck => {\n    const data = await db\n      .ref()\n      .orderByChild(\"hex_id\")\n      .equalTo(Number(hexToCheck))\n      .once(\"value\");\n    return data.val();\n  };\n  let res = {};\n\n  $: {\n    if (selectedHexId) {\n      res = requestFirebase(selectedHexId);\n    }\n  }\n\n  let articleText = \"\";\n</script>\n\n<div class=\"card\">\n  {#await res}\n    <p>loading ...</p>\n  {:then value}\n    {#each Object.entries(value) as item}\n      <button class=\"badge\" on:click={() => (articleText = item[1].text)}>\n        {item[1].title}\n      </button>\n    {/each}\n  {/await}\n\n  {#if articleText !== ''}\n    <Textdemo text={articleText} token={clickWord} />\n  {/if}\n\n</div>\n\n<style>\n  .badge {\n    font-size: 0.8rem;\n    padding: 0.7rem 1rem;\n    text-align: center;\n    margin: 0.3rem;\n    background: #54918d;\n    color: white;\n    border-radius: 5px;\n    font-family: \"Acme\", sans-serif;\n  }\n  .badge:hover {\n    opacity: 0.7;\n  }\n\n  /* Cards */\n  .card {\n    padding: 1rem;\n    margin: 1em 20% 1em;\n  }\n</style>\n",
    "<script>\n  export let text;\n  export let token;\n\n  let reg = new RegExp(\"\", \"gi\");\n  let renderText = text;\n  $: {\n    reg = new RegExp(token + \"[a-z]+\", \"gi\"); //TODO: cannot match some words\n    renderText = text.replace(reg, str => {\n      return (\n        '<span style=\"color:white; background-color: #54918d; >' +\n        str +\n        \"</span>\"\n      );\n    });\n  }\n</script>\n\n<div>\n  <h2 class=\"title\">Token: {token}</h2>\n  <p class=\"content\">\n    {@html renderText}\n  </p>\n</div>\n\n<style>\n  div {\n    width: 80%;\n    margin: 0 auto;\n    margin-bottom: 50px;\n    margin-top: 50px;\n  }\n  h2 {\n    font-family: \"Acme\", sans-serif;\n  }\n\n  p {\n    font-family: \"Hind Siliguri\", sans-serif;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}