{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Beeswarm.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Home from \"./page/Home.svelte\";\n  import About from \"./page/About.svelte\";\n  export let nav = \"home\";\n\n  let class1, class2;\n\n  $: {\n    if (nav) {\n      if (nav === \"home\") {\n        class1 = \"topnav-active\";\n      } else {\n        class1 = \"\";\n      }\n      if (nav === \"about\") {\n        class2 = \"topnav-active\";\n      } else {\n        class2 = \"\";\n      }\n    }\n  }\n</script>\n\n<main>\n  <ul class=\"topnav\">\n    <a href=\"/\" on:click|preventDefault={() => (nav = 'home')} class={class1}>\n      Home\n    </a>\n    <a href=\"/\" on:click|preventDefault={() => (nav = 'about')} class={class2}>\n      About\n    </a>\n  </ul>\n\n  {#if nav === 'home'}\n    <Home />\n  {:else if nav === 'about'}\n    <About />\n  {/if}\n</main>\n\n<style>\n  .topnav {\n    background-color: #53aeb6;\n    overflow: hidden;\n    margin-bottom: 0;\n    border: 0;\n  }\n\n  /* Style the links inside the navigation bar */\n  .topnav a {\n    float: left;\n    color: #f2f2f2;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n    font-size: 17px;\n  }\n\n  /* Change the color of links on hover */\n  .topnav a:hover {\n    color: rgb(124, 124, 124);\n  }\n\n  /* Add a color to the active/current link */\n  .topnav-active {\n    background-color: #9bd0d5;\n    color: white;\n  }\n</style>\n",
    "<script>\n  import { scaleLinear } from \"d3-scale\";\n  import { forceSimulation, forceX, forceY, forceCollide } from \"d3-force\";\n  import { Graphic, Point, Label, XAxis } from \"@snlab/florence\";\n\n  // data\n  export let pageTitle = \"\";\n  export let data = \"\"\n\n  // set up\n  const width = 1200; // canvas\n  const height = 400; // canvas\n  const radiusUpperBound = 50; // the radius range of circle will between [ radiusLowerBound, radiusUpperBound ]\n  const radiusLowerBound = 3;\n  // set color\n  const backgroundColor = \"#b2ded3\"\n  const axisColor = \"#54918d\"\n  const labelColor = \"white\"\n  const circleColor = axisColor\n  // set other aes property\n  const opacityCircle = 0.3;\n  const opacityText = 0.8; // label of circle\n  const fontSize = 12; // label of circle & Axis\n\n  // scale the data for x position and radius\n  const scaleX = scaleLinear()\n    .domain([1000, 6000]) // TODO: domain of dataset\n    .range([0, width]);\n  const scaleRadius = scaleLinear()\n    .domain([1000, 6000])\n    .range([radiusLowerBound, radiusUpperBound]);\n  \n  // copy data to a new container and format the data structures\n  let circles = data\n    .map(d => ({\n      x: scaleX(d.Weight_in_lbs),\n      y: height / 2,\n      radius: scaleRadius(d.Weight_in_lbs),\n      data: d\n    }))\n    .sort((a, b) => a.x - b.x);\n\n  // run simulation\n  const simulation = forceSimulation(circles)\n    .force(\"collide\", forceCollide(d => d.radius))\n    .force(\"x\", forceX(d => d.x))\n    .force(\"y\", forceY(height / 2))\n    .on(\"tick\", () => (circles = circles));\n</script>\n\n<div>\n  <div id=\"beeswarm\">\n    <Graphic {width} {height} padding={20} {backgroundColor}>\n      <!-- name of the page -->\n      <Label x={30} y={30} text={pageTitle} fill={labelColor} anchorPoint=\"lt\" fontWeight=\"bold\"/>\n      {#each circles as circle}\n        <!-- draw circle -->\n        <Point\n          x={circle.x}\n          y={circle.y}\n          radius={circle.radius - 3}\n          fill={circleColor}\n          opacity={opacityCircle} />\n\n        <!-- add label for each circle -->\n        <Label\n          x={circle.x}\n          y={circle.y}\n          text={circle.data.Name}\n          opacity={opacityText}\n          {fontSize}\n          fill={labelColor} />\n      {/each}\n      <XAxis\n        scale={scaleX}\n        labelColor={axisColor}\n        labelFontSize={fontSize}\n        baseLineColor={axisColor} />\n    </Graphic>\n  </div>\n\n  <h2>Distribution of words</h2>\n</div>\n\n<style>\n  div {\n    text-align: center;\n  }\n  h2 {\n    color: #53aeb6;\n    /* text-align: center; */\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAyCE,OAAO,8BAAC,CAAC,AACP,gBAAgB,CAAE,OAAO,CACzB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,CAAC,CAChB,MAAM,CAAE,CAAC,AACX,CAAC,AAGD,sBAAO,CAAC,CAAC,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,eAAe,CAAE,IAAI,CACrB,SAAS,CAAE,IAAI,AACjB,CAAC,AAGD,sBAAO,CAAC,gBAAC,MAAM,AAAC,CAAC,AACf,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3B,CAAC,AAGD,cAAc,8BAAC,CAAC,AACd,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,AACd,CAAC;ACkBD,GAAG,eAAC,CAAC,AACH,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,OAAO,AAEhB,CAAC"
}